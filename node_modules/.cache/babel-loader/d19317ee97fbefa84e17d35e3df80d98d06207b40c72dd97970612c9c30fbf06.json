{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\React\\\\1.2.12\\\\1.2.12\\\\src\\\\component\\\\task-list\\\\task-list.js\";\nimport { Component } from \"react\";\nimport \"./task-list.css\";\nimport Task from \"../task\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends Component {\n  render() {\n    const {\n      todos,\n      onDeleted,\n      onSave,\n      onToggleCompleted,\n      onToggleEditing,\n      filter\n    } = this.props;\n    let elements = [];\n    const TaskWithProps = () => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        date: item.date,\n        label: item.label,\n        completed: item.completed,\n        editing: item.editing,\n        onDeleted: () => onDeleted(item.id),\n        onSave: () => onSave(item.id),\n        onToggleCompleted: () => {\n          onToggleCompleted(item.id);\n        },\n        onToggleEditing: () => {\n          onToggleEditing(item.id);\n        }\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    };\n    switch (filter) {\n      case \"Active\":\n        elements = todos.map(item => {\n          if (!item.completed) {}\n        });\n        break;\n      case \"Completed\":\n        elements = todos.map(item => {\n          if (item.completed) {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              date: item.date,\n              label: item.label,\n              completed: item.completed,\n              editing: item.editing,\n              onDeleted: () => onDeleted(item.id),\n              onSave: () => onSave(item.id),\n              onToggleCompleted: () => {\n                onToggleCompleted(item.id);\n              },\n              onToggleEditing: () => {\n                onToggleEditing(item.id);\n              }\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this);\n          }\n        });\n        break;\n      case \"All\":\n        elements = todos.map(item => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            date: item.date,\n            label: item.label,\n            completed: item.completed,\n            editing: item.editing,\n            onDeleted: () => onDeleted(item.id),\n            onSave: () => onSave(item.id),\n            onToggleCompleted: () => {\n              onToggleCompleted(item.id);\n            },\n            onToggleEditing: () => {\n              onToggleEditing(item.id);\n            }\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this);\n        });\n        break;\n      default:\n        throw new Error(\"Incorrect filter\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n}\nTaskList.defaultProps = {\n  todos: [{}],\n  onDeleted: () => {},\n  onSave: () => {},\n  onToggleCompleted: () => {},\n  onToggleEditing: () => {},\n  filter: \"All\"\n};\nTaskList.propTypes = {};","map":{"version":3,"names":["Component","Task","PropTypes","jsxDEV","_jsxDEV","TaskList","render","todos","onDeleted","onSave","onToggleCompleted","onToggleEditing","filter","props","elements","TaskWithProps","date","item","label","completed","editing","id","fileName","_jsxFileName","lineNumber","columnNumber","map","Error","className","children","defaultProps","propTypes"],"sources":["D:/projects/React/1.2.12/1.2.12/src/component/task-list/task-list.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport \"./task-list.css\";\r\nimport Task from \"../task\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class TaskList extends Component {\r\n  static defaultProps = {\r\n    todos: [{}],\r\n    onDeleted: () => {},\r\n    onSave: () => {},\r\n    onToggleCompleted: () => {},\r\n    onToggleEditing: () => {},\r\n    filter: \"All\",\r\n  };\r\n\r\n  static propTypes = {};\r\n  render() {\r\n    const {\r\n      todos,\r\n      onDeleted,\r\n      onSave,\r\n      onToggleCompleted,\r\n      onToggleEditing,\r\n      filter,\r\n    } = this.props;\r\n\r\n    let elements = [];\r\n    const TaskWithProps = () => {\r\n      return (\r\n        <Task\r\n          date={item.date}\r\n          label={item.label}\r\n          key={item.id}\r\n          completed={item.completed}\r\n          editing={item.editing}\r\n          onDeleted={() => onDeleted(item.id)}\r\n          onSave={() => onSave(item.id)}\r\n          onToggleCompleted={() => {\r\n            onToggleCompleted(item.id);\r\n          }}\r\n          onToggleEditing={() => {\r\n            onToggleEditing(item.id);\r\n          }}\r\n        />\r\n      );\r\n    };\r\n\r\n    switch (filter) {\r\n      case \"Active\":\r\n        elements = todos.map((item) => {\r\n          if (!item.completed) {\r\n          }\r\n        });\r\n        break;\r\n      case \"Completed\":\r\n        elements = todos.map((item) => {\r\n          if (item.completed) {\r\n            return (\r\n              <Task\r\n                date={item.date}\r\n                label={item.label}\r\n                key={item.id}\r\n                completed={item.completed}\r\n                editing={item.editing}\r\n                onDeleted={() => onDeleted(item.id)}\r\n                onSave={() => onSave(item.id)}\r\n                onToggleCompleted={() => {\r\n                  onToggleCompleted(item.id);\r\n                }}\r\n                onToggleEditing={() => {\r\n                  onToggleEditing(item.id);\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        });\r\n        break;\r\n      case \"All\":\r\n        elements = todos.map((item) => {\r\n          return (\r\n            <Task\r\n              date={item.date}\r\n              label={item.label}\r\n              key={item.id}\r\n              completed={item.completed}\r\n              editing={item.editing}\r\n              onDeleted={() => onDeleted(item.id)}\r\n              onSave={() => onSave(item.id)}\r\n              onToggleCompleted={() => {\r\n                onToggleCompleted(item.id);\r\n              }}\r\n              onToggleEditing={() => {\r\n                onToggleEditing(item.id);\r\n              }}\r\n            />\r\n          );\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error(\"Incorrect filter\");\r\n    }\r\n\r\n    return <ul className=\"todo-list\">{elements}</ul>;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}