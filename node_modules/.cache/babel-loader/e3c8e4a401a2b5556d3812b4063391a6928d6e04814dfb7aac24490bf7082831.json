{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\React\\\\1.2.12\\\\1.2.12\\\\src\\\\component\\\\task\\\\task.js\";\nimport { Component } from \"react\";\nimport \"./task.css\";\nimport { click } from \"@testing-library/user-event/dist/click\";\nimport { getByDisplayValue } from \"@testing-library/react\";\n\n// const CompletedTask = () => {\n//   return (\n//     <li className=\"completed\">\n//       <div className=\"view\">\n//         <input className=\"toggle\" type=\"checkbox\" />\n//         <label>\n//           <span className=\"description\"></span>\n//           <span className=\"created\">created 17 seconds ago</span>\n//         </label>\n//         <button className=\"icon icon-edit\"></button>\n//         <button className=\"icon icon-destroy\"></button>\n//       </div>\n//     </li>\n//   );\n// };\n\n// const EditingTask = () => {\n//   return (\n//     <li className=\"editing\">\n//       <div className=\"view\">\n//         <input className=\"toggle\" type=\"checkbox\" />\n//         <label>\n//           <span className=\"description\"></span>\n//           <span className=\"created\">created 5 minutes ago</span>\n//         </label>\n//         <button className=\"icon icon-edit\"></button>\n//         <button className=\"icon icon-destroy\"></button>\n//       </div>\n//       <input type=\"text\" className=\"edit\" value=\"Editing task\" />\n//     </li>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      completed: false,\n      editing: false\n    };\n    this.onComplete = () => {\n      this.setState(state => {\n        return {\n          completed: !state.completed\n        };\n      });\n    };\n    this.onEditClick = () => {\n      this.setState(state => {\n        return {\n          editing: !state.editing\n        };\n      });\n    };\n  }\n  render() {\n    const {\n      label,\n      onDeleted\n    } = this.props;\n    const {\n      completed,\n      editing\n    } = this.state;\n    let classNames = \"\";\n    let checkboxState = \"\";\n    if (completed) {\n      classNames += \"completed\";\n    }\n    if (editing) {\n      classNames += \"editing\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: this.onComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: this.onComplete,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: \"created 5 minutes ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: this.onEditClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"edit\",\n        defaultValue: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","click","getByDisplayValue","jsxDEV","_jsxDEV","Task","constructor","args","state","completed","editing","onComplete","setState","onEditClick","render","label","onDeleted","props","classNames","checkboxState","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","defaultValue"],"sources":["D:/projects/React/1.2.12/1.2.12/src/component/task/task.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport \"./task.css\";\r\nimport { click } from \"@testing-library/user-event/dist/click\";\r\nimport { getByDisplayValue } from \"@testing-library/react\";\r\n\r\n// const CompletedTask = () => {\r\n//   return (\r\n//     <li className=\"completed\">\r\n//       <div className=\"view\">\r\n//         <input className=\"toggle\" type=\"checkbox\" />\r\n//         <label>\r\n//           <span className=\"description\"></span>\r\n//           <span className=\"created\">created 17 seconds ago</span>\r\n//         </label>\r\n//         <button className=\"icon icon-edit\"></button>\r\n//         <button className=\"icon icon-destroy\"></button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// const EditingTask = () => {\r\n//   return (\r\n//     <li className=\"editing\">\r\n//       <div className=\"view\">\r\n//         <input className=\"toggle\" type=\"checkbox\" />\r\n//         <label>\r\n//           <span className=\"description\"></span>\r\n//           <span className=\"created\">created 5 minutes ago</span>\r\n//         </label>\r\n//         <button className=\"icon icon-edit\"></button>\r\n//         <button className=\"icon icon-destroy\"></button>\r\n//       </div>\r\n//       <input type=\"text\" className=\"edit\" value=\"Editing task\" />\r\n//     </li>\r\n//   );\r\n// };\r\nexport default class Task extends Component {\r\n  state = {\r\n    completed: false,\r\n    editing: false,\r\n  };\r\n\r\n  onComplete = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        completed: !state.completed,\r\n      };\r\n    });\r\n  };\r\n\r\n  onEditClick = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        editing: !state.editing,\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    const { label, onDeleted } = this.props;\r\n    const { completed, editing } = this.state;\r\n    let classNames = \"\";\r\n    let checkboxState = \"\";\r\n\r\n    if (completed) {\r\n      classNames += \"completed\";\r\n    }\r\n    if (editing) {\r\n      classNames += \"editing\";\r\n    }\r\n    return (\r\n      <li className={classNames}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            onChange={this.onComplete}\r\n          />\r\n          <label onClick={this.onComplete}>\r\n            <span className=\"description\">{label}</span>\r\n            <span className=\"created\">created 5 minutes ago</span>\r\n          </label>\r\n          <button\r\n            className=\"icon icon-edit\"\r\n            onClick={this.onEditClick}\r\n          ></button>\r\n          <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\r\n        </div>\r\n        <input type=\"text\" className=\"edit\" defaultValue={label} />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}