{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\React\\\\1.2.12\\\\1.2.12\\\\src\\\\component\\\\task-list\\\\task-list.js\";\nimport { Component } from \"react\";\nimport \"./task-list.css\";\nimport Task from \"../task\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends Component {\n  render() {\n    const {\n      todos,\n      onDeleted,\n      onSave,\n      onToggleCompleted,\n      onToggleEditing,\n      filter\n    } = this.props;\n    let elements = [];\n    const taskWithProps = item => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        date: item.date,\n        label: item.label,\n        completed: item.completed,\n        editing: item.editing,\n        onDeleted: () => onDeleted(item.id),\n        onSave: () => onSave(item.id),\n        onToggleCompleted: () => {\n          onToggleCompleted(item.id);\n        },\n        onToggleEditing: () => {\n          onToggleEditing(item.id);\n        }\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    };\n    switch (filter) {\n      case \"Active\":\n        elements = todos.map(item => {\n          if (!item.completed) {\n            return taskWithProps(item);\n          }\n        });\n        break;\n      case \"Completed\":\n        elements = todos.map(item => {\n          if (item.completed) {\n            return taskWithProps(item);\n          }\n        });\n        break;\n      case \"All\":\n        elements = todos.map(item => {\n          return taskWithProps(item);\n        });\n        break;\n      default:\n        throw new Error(\"Incorrect filter\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n}\nTaskList.defaultProps = {\n  todos: [{}],\n  onDeleted: () => {},\n  onSave: () => {},\n  onToggleCompleted: () => {},\n  onToggleEditing: () => {},\n  filter: \"All\"\n};\nTaskList.propTypes = {};","map":{"version":3,"names":["Component","Task","PropTypes","jsxDEV","_jsxDEV","TaskList","render","todos","onDeleted","onSave","onToggleCompleted","onToggleEditing","filter","props","elements","taskWithProps","item","date","label","completed","editing","id","fileName","_jsxFileName","lineNumber","columnNumber","map","Error","className","children","defaultProps","propTypes"],"sources":["D:/projects/React/1.2.12/1.2.12/src/component/task-list/task-list.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport \"./task-list.css\";\r\nimport Task from \"../task\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class TaskList extends Component {\r\n  static defaultProps = {\r\n    todos: [{}],\r\n    onDeleted: () => {},\r\n    onSave: () => {},\r\n    onToggleCompleted: () => {},\r\n    onToggleEditing: () => {},\r\n    filter: \"All\",\r\n  };\r\n\r\n  static propTypes = {};\r\n  render() {\r\n    const {\r\n      todos,\r\n      onDeleted,\r\n      onSave,\r\n      onToggleCompleted,\r\n      onToggleEditing,\r\n      filter,\r\n    } = this.props;\r\n\r\n    let elements = [];\r\n\r\n    const taskWithProps = (item) => {\r\n      return (\r\n        <Task\r\n          date={item.date}\r\n          label={item.label}\r\n          key={item.id}\r\n          completed={item.completed}\r\n          editing={item.editing}\r\n          onDeleted={() => onDeleted(item.id)}\r\n          onSave={() => onSave(item.id)}\r\n          onToggleCompleted={() => {\r\n            onToggleCompleted(item.id);\r\n          }}\r\n          onToggleEditing={() => {\r\n            onToggleEditing(item.id);\r\n          }}\r\n        />\r\n      );\r\n    };\r\n\r\n    switch (filter) {\r\n      case \"Active\":\r\n        elements = todos.map((item) => {\r\n          if (!item.completed) {\r\n            return taskWithProps(item);\r\n          }\r\n        });\r\n        break;\r\n      case \"Completed\":\r\n        elements = todos.map((item) => {\r\n          if (item.completed) {\r\n            return taskWithProps(item);\r\n          }\r\n        });\r\n        break;\r\n      case \"All\":\r\n        elements = todos.map((item) => {\r\n          return taskWithProps(item);\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error(\"Incorrect filter\");\r\n    }\r\n\r\n    return <ul className=\"todo-list\">{elements}</ul>;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAW9CM,MAAMA,CAAA,EAAG;IACP,MAAM;MACJC,KAAK;MACLC,SAAS;MACTC,MAAM;MACNC,iBAAiB;MACjBC,eAAe;MACfC;IACF,CAAC,GAAG,IAAI,CAACC,KAAK;IAEd,IAAIC,QAAQ,GAAG,EAAE;IAEjB,MAAMC,aAAa,GAAIC,IAAI,IAAK;MAC9B,oBACEZ,OAAA,CAACH,IAAI;QACHgB,IAAI,EAAED,IAAI,CAACC,IAAK;QAChBC,KAAK,EAAEF,IAAI,CAACE,KAAM;QAElBC,SAAS,EAAEH,IAAI,CAACG,SAAU;QAC1BC,OAAO,EAAEJ,IAAI,CAACI,OAAQ;QACtBZ,SAAS,EAAEA,CAAA,KAAMA,SAAS,CAACQ,IAAI,CAACK,EAAE,CAAE;QACpCZ,MAAM,EAAEA,CAAA,KAAMA,MAAM,CAACO,IAAI,CAACK,EAAE,CAAE;QAC9BX,iBAAiB,EAAEA,CAAA,KAAM;UACvBA,iBAAiB,CAACM,IAAI,CAACK,EAAE,CAAC;QAC5B,CAAE;QACFV,eAAe,EAAEA,CAAA,KAAM;UACrBA,eAAe,CAACK,IAAI,CAACK,EAAE,CAAC;QAC1B;MAAE,GAVGL,IAAI,CAACK,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWb,CAAC;IAEN,CAAC;IAED,QAAQb,MAAM;MACZ,KAAK,QAAQ;QACXE,QAAQ,GAAGP,KAAK,CAACmB,GAAG,CAAEV,IAAI,IAAK;UAC7B,IAAI,CAACA,IAAI,CAACG,SAAS,EAAE;YACnB,OAAOJ,aAAa,CAACC,IAAI,CAAC;UAC5B;QACF,CAAC,CAAC;QACF;MACF,KAAK,WAAW;QACdF,QAAQ,GAAGP,KAAK,CAACmB,GAAG,CAAEV,IAAI,IAAK;UAC7B,IAAIA,IAAI,CAACG,SAAS,EAAE;YAClB,OAAOJ,aAAa,CAACC,IAAI,CAAC;UAC5B;QACF,CAAC,CAAC;QACF;MACF,KAAK,KAAK;QACRF,QAAQ,GAAGP,KAAK,CAACmB,GAAG,CAAEV,IAAI,IAAK;UAC7B,OAAOD,aAAa,CAACC,IAAI,CAAC;QAC5B,CAAC,CAAC;QACF;MACF;QACE,MAAM,IAAIW,KAAK,CAAC,kBAAkB,CAAC;IACvC;IAEA,oBAAOvB,OAAA;MAAIwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEf;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;AACF;AArEqBpB,QAAQ,CACpByB,YAAY,GAAG;EACpBvB,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;EACXC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChBC,iBAAiB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC3BC,eAAe,EAAEA,CAAA,KAAM,CAAC,CAAC;EACzBC,MAAM,EAAE;AACV,CAAC;AARkBP,QAAQ,CAUpB0B,SAAS,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}